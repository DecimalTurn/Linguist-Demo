#################################################################################
# TODO:
#################################################################################
# Try to run in Docker?: https://github.com/github-linguist/linguist#docker
# Use the cache to load gem faster: https://docs.knapsackpro.com/2021/how-to-load-ruby-gems-from-cache-on-github-actions
  # Seems like the tutorial above is for installing dependencies to an actual ruby project. What we want it to save the installed gem with its dependencies as a whole
  # Let's look at : https://stackoverflow.com/questions/3408868/where-do-gems-install
    # This gives us the option to know where the gems is installed so that we can add those folders to the cache later on.
      # Output: 
        # RubyGems Environment:
        #   - RUBYGEMS VERSION: 3.3.5
        #   - RUBY VERSION: 3.0.2 (2021-07-07 patchlevel 107) [x86_64-linux-gnu]
        #   - INSTALLATION DIRECTORY: /var/lib/gems/3.0.0
        #   - USER INSTALLATION DIRECTORY: /root/.local/share/gem/ruby/3.0.0
        #   - RUBY EXECUTABLE: /usr/bin/ruby3.0
        #   - GIT EXECUTABLE: /usr/bin/git
        #   - EXECUTABLE DIRECTORY: /usr/local/bin
        #   - SPEC CACHE DIRECTORY: /root/.local/share/gem/specs
        #   - SYSTEM CONFIGURATION DIRECTORY: /etc
        #   - RUBYGEMS PLATFORMS:
        #      - ruby
        #      - x86_64-linux
        #   - GEM PATHS:
        #      - /var/lib/gems/3.0.0
        #      - /root/.local/share/gem/ruby/3.0.0
        #      - /usr/local/lib/ruby/gems/3.0.0
        #      - /usr/lib/ruby/gems/3.0.0
        #      - /usr/lib/x86_64-linux-gnu/ruby/gems/3.0.0
        #      - /usr/share/rubygems-integration/3.0.0
        #      - /usr/share/rubygems-integration/all
        #      - /usr/lib/x86_64-linux-gnu/rubygems-integration/3.0.0
# See also: https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
  # This seems to be more about caching the output of the bundler. Can we just add the bundler to the project?

name: Run Linguist

on: workflow_dispatch

env:
  REPO: PuzzleTakX/PuzzleTak_AudioPlayer  # Define the repository here
  OPTIONS: '--breakdown'       # Define the options for Linguist here

jobs:
  run-linguist:
    name: Run Linguist
    runs-on: ubuntu-latest
    steps:

      - name: Setup Cache for Gems
        id: cache-gems
        uses: actions/cache@v3
        with:
          path: |
            /var/lib/gems/3.0.0
            /root/.local/share/gem/ruby/3.0.0
            /usr/local/lib/ruby/gems/3.0.0
            /usr/lib/ruby/gems/3.0.0
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Linguist
        run: |
          if [ ! -f /var/lib/gems/3.0.0/bin/github-linguist ] && [ ! -f /root/.local/share/gem/ruby/3.0.0/bin/github-linguist ] && [ ! -f /usr/local/lib/ruby/gems/3.0.0/bin/github-linguist ] && [ ! -f /usr/lib/ruby/gems/3.0.0/bin/github-linguist ]; then
            echo "github-linguist not found in cache, installing..."
            sudo gem install github-linguist
          else
            echo "github-linguist found in cache."
            echo 'export PATH="$PATH:/var/lib/gems/3.0.0/bin"' >> $GITHUB_ENV
          fi
        shell: bash

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}

      - name: Run Linguist
        run: |
          echo ${{ env.REPO }}
          github-linguist ${{ env.OPTIONS }}
        shell: bash
        #env:
        #  PATH: /var/lib/gems/3.0.0/bin:/root/.local/share/gem/ruby/3.0.0/bin:/usr/local/lib/ruby/gems/3.0.0/bin:/usr/lib/ruby/gems/3.0.0/bin:$PATH
        #  PATH: PATH: /var/lib/gems/3.0.0/bin:/root/.local/share/gem/ruby/3.0.0/bin:/usr/local/lib/ruby/gems/3.0.0/bin:/usr/lib/ruby/gems/3.0.0/bin:$PATH

    # - name: Checkout Linguist
    #   uses: actions/checkout@v4
    #   with:
    #     name: '${{ inputs.repo }}'
    #     ref: refs/heads/release
    # - name: Test Linguist
    #   run: |
    #     cd github-linguist
    #     bundle exec rake test
    #     cd ..
    #   shell: bash
